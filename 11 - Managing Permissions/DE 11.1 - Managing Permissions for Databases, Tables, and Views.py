# Databricks notebook source
# MAGIC %md-sandbox
# MAGIC 
# MAGIC <div style="text-align: center; line-height: 0; padding-top: 9px;">
# MAGIC   <img src="https://databricks.com/wp-content/uploads/2018/03/db-academy-rgb-1200px.png" alt="Databricks Learning" style="width: 600px">
# MAGIC </div>

# COMMAND ----------

# MAGIC %md <i18n value="0c4e00b2-1879-4e05-8bad-70f2e471691c"/>
# データベース、テーブル、ビューの権限管理（Managing Permissions for Databases, Tables, and Views）

DatabricksのテーブルACLがどのように機能するかを説明するために、ユーザーのグループを対象とした詳細な解説を以下に提供しています。 Databricks SQLとData Explorerを活用してこれらのタスクを実行し、グループ内の少なくとも1人のユーザーが管理者ステータスを持っていることを前提としています（または、ユーザーがデータベース、テーブル、ビューを作成するための適切な権限を許可する権限を管理者が以前に構成していることを前提としています） 。

これらの手順は管理者ユーザーが完了するためのものです。 次のノートブックには、ユーザーがペアで完了するための同様の演習があります。

## 学習目標（Learning Objectives）
このレッスンでは、以下のことが学べます。
* DBSQLでのユーザーと管理者のデフォルトの権限を説明する
* DBSQLで作成されたデータベース、テーブル、およびビューのデフォルトの所有者を特定し、所有権を変更する
* Data Explorerを使用してリレーショナルエンティティを操作する
* Data Explorerでテーブルとビューの権限を構成する
* テーブルの検出とクエリを可能にする最小限の権限を構成する

# COMMAND ----------

# MAGIC %run ../Includes/Classroom-Setup-11.1

# COMMAND ----------

# MAGIC %md <i18n value="86552e2b-b893-4633-990e-4dd27255daa9"/>
## セットアップ文の生成（Generate Setup Statements）

次のセルは、Pythonを使用して現在のユーザーのユーザー名を抽出し、これをデータベース、テーブル、ビューの作成に使用されるいくつかの文へとフォーマットしています。

管理者のみが次のセルを実行する必要があります。 実行に成功すると、一連のフォーマットされたSQLクエリが出力されます。それらはDBSQLクエリエディターへとコピーして実行できます。

# COMMAND ----------

DA.generate_users_table()

# COMMAND ----------

# MAGIC %md <i18n value="0369413a-e3d4-4fe1-8948-143fb950584b"/>
手順は、次の通りです。
1. 上のセルを実行します
1. 出力されたものをすべてクリップボードにコピーします
1. Databricks SQLワークスペースへと移動します
1. SQLウェアハウスが起動していることを確認します
1. 左側のサイドバーを使用して、**SQLエディタ**を選択します
1. 上のクエリを貼り付け、右上にある青色の**実行**をクリックします

**注**：これらのクエリを正常に実行するためには、SQLウェアハウスに接続する必要があります。 SQLウェアハウスに接続できない場合には、管理者に連絡してアクセス権を付与してもらう必要があります。

# COMMAND ----------

# MAGIC %md <i18n value="c0629565-2278-4384-9919-f3d6f946eb11"/>
## Data Explorerを使用する（Using Data Explorer）

* 左側のサイドバーナビゲーターを使用して、**データ**タブを選択します。これにより、**データエクスプローラ**が表示されます

## データエクスプローラとは？（What is the Data Explorer?）

データエクスプローラを使用するとユーザーと管理者は次のことができます。
* データベース、テーブル、ビューを移動する
* データスキーマ、メタデータ、履歴を探る
* リレーショナルエンティティの権限を設定したり変更したりする

これらの解説が書かれている現在、Unity Catalogはまだ一般に利用可能ではないことに注意してください。 追加された3層の名前空間機能は、デフォルトの **`hive_metastore`** とダッシュボードやクエリなどに使用される **`サンプル`** カタログを切り替えることである程度下見できます。 Unity Catalogがワークスペースに追加されるにつれて、Data ExplorerのUIと機能が進化する予定です。

## 権限を設定する（Configuring Permissions）

デフォルトでは、管理者はメタストアに登録されているすべてのオブジェクトを表示でき、ワークスペース内の他のユーザーの権限を制御できます。 ユーザーは、DBSQLで作成するオブジェクトを除き、メタストアに登録されているものに対してデフォルトでは権限を**一切与えられません**。ユーザーがデータベース、テーブル、またはビューを作成する前に、ユーザーに特別に付与された作成および使用の権限が必要であることに注意してください。

通常、権限は、管理者によって構成されたグループを使用して設定されます。この操作は、多くの場合、SCIM統合から別のIDプロバイダーとの組織構造をインポートすることで行われます。 このレッスンでは、権限の制御に使用されるアクセス制御リスト（ACL）について説明しますが、説明はグループではなく個人を対象とします。

## テーブルACL（Table ACLs）

Databricksでは、次のオブジェクトに対する権限を設定できます。

| オブジェクト   | 範囲                                                                                                               |
| -------- | ---------------------------------------------------------------------------------------------------------------- |
| CATALOG  | データカタログ全体へのアクセスを制御します。                                                                                           |
| DATABASE | データベースへのアクセスを制御します。                                                                                              |
| TABLE    | マネージドテーブルまたは外部テーブルへのアクセスを制御します。                                                                                  |
| VIEW     | SQLビューへのアクセスを制御します。                                                                                              |
| FUNCTION | 名前付き関数へのアクセスを制御します。                                                                                              |
| ANY FILE | 元となっているファイルシステムへのアクセスを制御します。 ANY FILE権限を付与されたユーザーは、ファイルシステムから直接読み取ることにより、カタログ、データベース、テーブル、およびビューに課せられた制限を回避できます。 |

**注**：現在、 **`ANY FILE`** オブジェクトを Data Explorerから設定することはできます。

## 権限の付与（Granting Privileges）

Databricksの管理者とオブジェクトの所有者は、次のルールに従って権限を付与できます。

| 役割                                      | アクセス権限を次のものに対して付与可                |
| --------------------------------------- | --------------------------------- |
| Databricks administrator（Databricks管理者） | カタログ内のすべてのオブジェクトと元となっているファイルシステム。 |
| Catalog owner（カタログの所有者）                 | カタログ内のすべてのオブジェクト。                 |
| Database owner（データベースの所有者）              | データベース内のすべてのオブジェクト。               |
| Table owner（テーブルの所有者）                   | テーブルのみ（ビューと関数に対するオプションも似ています）。    |

**注**：現在、Data Explorerは、データベース、テーブル、およびビューの所有権を変更するためにのみ使用できます。 カタログの権限は、SQLクエリエディタを使用してインタラクティブに設定できます。

## 権限（Privileges）

Data Explorerでは次の権限を設定できます。

| 権限の名前          | 権限の範囲                                                  |
| -------------- | ------------------------------------------------------ |
| ALL PRIVILEGES | すべての特権を付与します（以下のすべての権限を含みます）。                          |
| SELECT         | オブジェクトへの読み取りアクセスを許可します。                                |
| MODIFY         | オブジェクトとの間でデータを追加、削除、および変更できるようになります。                   |
| READ_METADATA  | オブジェクトとそのメタデータを表示できるようになります。                           |
| USAGE          | 権限の範囲は広くなりませんが、データベースオブジェクトに対してアクションを実行するための追加要件となります。 |
| CREATE         | オブジェクトを作成できるようになります（例えば、データベース内のテーブルなど）。               |
| CREATE_NAMED_FUNCTION |既存のカタログまたはスキーマに名前付きUDFを作成できるようになります。 |

# COMMAND ----------

# MAGIC %md <i18n value="e82e2a15-0fdd-4af1-9383-9681a2cddbb8"/>
## デフォルトの権限を確認する（Review the Default Permissions）
データエクスプローラで、以前作成したデータベース（これは **`dbacademy_<username>_acls_demo`** というパターンに従っているはずです）を見つけます。

データベース名をクリックすると、含まれているテーブルとビューのリストが左側に表示されます。 右側には**所有者**や**場所**などのデータベースに関する詳細情報がいくつか表示されます。

**権限**タブをクリックし、現在の権限所有者を確認します（ワークスペースの構成によっては、一部の権限がカタログ上の設定から継承されている場合があります）。

# COMMAND ----------

# MAGIC %md <i18n value="87339040-a0f3-4889-bc16-065f1c8a25b6"/>
## 所有権の割り当て（Assigning Ownership）

**所有者**フィールドの横にある青色の鉛筆をクリックします。 所有者は個人またはグループとして設定できることに注意してください。 ほとんどの実装では、信頼できるパワーユーザーの1つまたは複数の小さなグループを所有者に指定することで、重要なデータセットへの管理者アクセスを制限し、1人のユーザーが生産性を妨げないようにできます。

ここでは、所有者を**Admins**に設定します。これは、すべてのワークスペース管理者を含むデフォルトのグループです。

# COMMAND ----------

# MAGIC %md <i18n value="86f51802-f151-4fe1-8835-a793a3ce5756"/>
## データベース権限の変更（Change Database Permissions）

まず、すべてのユーザーがデータベースに関するメタデータを確認できるようにします。

手順は、次の通りです。
1. データベースの**権限**タブが選択されていることを確認します
1. 青色の**付与**ボタンをクリックします
1. **USAGE**、**READ_METADATA**オプションを選択します
1. 上部のドロップダウンメニューから**All Users**グループを選択します
1. **OK**をクリックします

これらの権限が更新されたことを確認するには、ユーザーがビューを更新する必要がある場合があることに注意してください。 更新は、Data ExplorerとSQL Editorの両方でほぼリアルタイムでユーザーに反映されるはずです。

# COMMAND ----------

# MAGIC %md <i18n value="f3026810-bf59-4558-bfd0-eb46636ceafb"/>
## ビュー権限の変更（Change View Permissions）

ユーザーはこのデータベースに関する情報を表示できるようになりましたが、上記で宣言されたビューもしくはテーブルを操作することはできません。

まず、ユーザーがビューを照会できるようにしましょう。

手順は、次の通りです。
1.  **`ny_users_vw`** を選択します
1. **権限**タブを選択します
   * ユーザーは、データベースレベルで付与された権限を継承しているはずです。ユーザーがアセットに対して現在持っている権限と、その権限がどこから継承されているかを確認できます
1. 青色の**付与**ボタンをクリックします
1. **SELECT**、**READ_METADATA**オプションを選択します
   * 厳密に言うと、**READ_METADATA**は、ユーザーがすでにデータベースから継承しているため、冗長です。 ただし、ビューレベルで付与すると、データベースの権限が取り消された場合でも、ユーザーがこの権限を保持できるようになります。
1. 上部のドロップダウンメニューから**All Users**グループを選択します
1. **OK**をクリックします

# COMMAND ----------

# MAGIC %md <i18n value="957dfb39-747b-45f3-86c3-c6d23496e19d"/>
## クエリを実行して確認する（Run a Query to Confirm）

**SQLエディタ**で、ユーザーは左側の**スキーマブラウザ**を使用して、管理者が制御しているデータベースに移動します。

ユーザーは、 **`SELECT * FROM`** と入力してクエリを開始し、ビューの名前にカーソルを合わせると表示される**>>**をクリックして、クエリに挿入します。

このクエリでは2つの結果が返されます。

**注**：このビューは、まだ権限が設定されていない **`users`** テーブルに対して定義されています。 ユーザーは、ビューで定義されたフィルタを通過するデータの部分にのみアクセスできることに注意してください。このパターンは、元になっている単一のテーブルを使用して、関連する利害関係者のデータへの制御されたアクセスを実現する方法を示しています。

# COMMAND ----------

# MAGIC %md <i18n value="5fece6bf-b060-46b3-bf10-1052baf1b6fe"/>
## テーブル権限の変更（Change Table Permissions）

上記と同じ手順を、今度は **`ユーザー`** テーブルに対して実行します。

手順は、次の通りです。
1.  **`users`** テーブルを選択します
1. **権限**タブを選択します
1. 青色の**付与**ボタンをクリックします
1. **SELECT**、**READ_METADATA**オプションを選択します
1. 上部のドロップダウンメニューから**All Users**グループを選択します
1. **OK**をクリックします

# COMMAND ----------

# MAGIC %md <i18n value="77c59af7-3bcc-4e46-97c2-64bd3dc77d34"/>
## ユーザーに **`DROP TABLE`** の実行を試してもらう（Have Users Attempt to **`DROP TABLE`** ）

**SQLエディタ**で、にユーザーにこのテーブルのデータを調べてもらいます。

ここでデータを変更するようにユーザーに促します。権限が正しく設定されていれば、これらのコマンドを実行するとエラーが発生します。

# COMMAND ----------

# MAGIC %md <i18n value="bc4d8d86-00a5-416e-a482-c843e58052d2"/>
## 派生データセット用のデータベースを作成する（Create a Database for Derivative Datasets）

ほとんどの場合、ユーザーは派生データセットを保存する場所が必要になります。 現在、ユーザーはどの場所にも新しいテーブルを作成できない場合があります（ワークスペース内の既存のACLと、学生が完了した前のレッスンで作成されたデータベースによって異なります）。

以下のセルでは、新しいデータベースを生成し、すべてのユーザーに権限を付与するためのコードを出力します。

**注**：ここでは、Data ExplorerではなくSQL Editorを使用して権限を設定します。 クエリ履歴を確認すると、以前Data Explorerから行った権限の変更がすべてSQLクエリとして実行され、ここに記録されていることがわかります（さらに、Data Explorerのほとんどのアクションは、UIフィールドへの入力に使用される対応するSQLクエリでログに記録されます）。

# COMMAND ----------

DA.generate_create_database_with_grants()

# COMMAND ----------

# MAGIC %md <i18n value="5f0e0657-1cf3-4728-9a31-07c0d57199e4"/>
## ユーザーに新しいテーブルまたはビューを作成してもらう（Have Users Create New Tables or Views）

ユーザーに、この新しいデータベースにテーブルとビューを作成できることを試す時間を与えましょう。

**注**：ユーザーには**MODIFY**および**SELECT**権限も付与されているため、すべてのユーザーは、そのピアによって作成されたエンティティをすぐに照会および変更できます。

# COMMAND ----------

# MAGIC %md <i18n value="9e468552-03bc-4c5a-b0e7-fcf5052cc478"/>
## 管理者設定（Admin Configuration）

現在、ユーザーには、デフォルトのカタログ **`hive_metastore`** に対するテーブルACL権限がデフォルトで付与されていません。 次のラボでは、ユーザーがデータベースを作成できることを前提としています。

Databricks SQLを使用してデフォルトのカタログにデータベースとテーブルを作成する機能を有効にするには、ワークスペース管理者にDBSQLクエリエディタで次のコマンドを実行してもらいます。

<strong><code>GRANT usage, create ON CATALOG &#x60;hive_metastore&#x60; TO &#x60;users&#x60;</code></strong>

これが正常に実行されたことを確認するには、次のクエリを実行します。

<strong><code>SHOW GRANT ON CATALOG &#x60;hive_metastore&#x60;</code></strong>

# COMMAND ----------

# MAGIC %md-sandbox
# MAGIC &copy; 2022 Databricks, Inc. All rights reserved.<br/>
# MAGIC Apache, Apache Spark, Spark and the Spark logo are trademarks of the <a href="https://www.apache.org/">Apache Software Foundation</a>.<br/>
# MAGIC <br/>
# MAGIC <a href="https://databricks.com/privacy-policy">Privacy Policy</a> | <a href="https://databricks.com/terms-of-use">Terms of Use</a> | <a href="https://help.databricks.com/">Support</a>
